import _thread
import time

counter = 0
lock = threading.Lock()

def counter_work(name,delay):
	global counter
	global lock
	
	while counter < 1000:
		time.sleep(delay)
		lock.aquire()
		counter += 1
		print (counter,name)
		lock.release()
	
_thread.start_new_thread(counter_work, ("Thread 1",1))
_thread.start_new_thread(counter_work, ("Thread 2",2))
_thread.start_new_thread(counter_work, ("Thread 3",0.5))
_thread.start_new_thread(counter_work, ("Thread 4",10))
_thread.start_new_thread(counter_work, ("Thread 5",3))
_thread.start_new_thread(counter_work, ("Thread 6",0.24))
_thread.start_new_thread(counter_work, ("Thread 7",1))
_thread.start_new_thread(counter_work, ("Thread 8",1))

while counter < 1000:
	pass
